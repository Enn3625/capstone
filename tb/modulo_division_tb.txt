`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 12.01.2024 18:01:37
// Design Name: 
// Module Name: modulo_division_tb
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////

module modulo_division_tb();
    reg clk;
    reg [31:0] in_data;
    wire [31:0] out_data;

    modulo_divison dut (
        .clk(clk),
        .input_data(in_data),
        .out_data(out_data));
    // Clock generation
    initial begin
        clk = 0;
        forever #5 clk = ~clk;
    end
    initial begin
        #10
        in_data = 32'hFBCDABFF;
        @(posedge clk) in_data <= in_data+4'hf;
        @(posedge clk) in_data <= in_data+4'hf;
        @(posedge clk) in_data <= in_data+4'hf;
        @(posedge clk) in_data <= in_data+4'hf;
        @(posedge clk) in_data <= in_data+4'hf;
        @(posedge clk) in_data <= in_data+4'hf;
        @(posedge clk) in_data <= in_data+4'hf;
        @(posedge clk) in_data <= in_data+4'hf;
        @(posedge clk) in_data <= in_data+4'hf;
        @(posedge clk) in_data <= in_data+4'hf;
        $display("Input: %h, Output: %h", in_data, out_data);
        $finish;
    end
endmodule
