`timescale 1ns / 1ps

module sig_fsm_tb();

  // Inputs
  reg clk;
  reg reset;
  reg start;
  //reg done;
  reg [4:0] num_inp;

  // Outputs
  wire done;
  wire [9:0] key_ram_read_addr;
  wire key_ram_read;
  wire [9:0] poly_read_addr;
  wire poly_read;
  wire out_wr_en;
  wire [9:0] out_wr_addr;
  wire sel;

  // Instantiate the module under test
  sig_fsm uut (
    .clk(clk),
    .reset(reset),
    .start(start),
    .done(done),
    .num_inp(num_inp),
    .key_ram_read_addr(key_ram_read_addr),
    .key_ram_read(key_ram_read),
    .poly_read_addr(poly_read_addr),
    .poly_read(poly_read),
    .out_wr_en(out_wr_en),
    .out_wr_addr(out_wr_addr),
    .sel(sel)
  );
  initial
    clk=0;
  // Clock generation
  always 
    #5 clk= ~clk;

  // Reset generation
  initial begin
    reset = 1;
    #20;
    reset = 0;
  end

  // Stimulus generation
  initial begin
    start = 0;
    #60
    start = 1;
    #100
    start=0;

  end
endmodule