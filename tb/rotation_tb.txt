module rotation_tb;

    reg clk;
    reg reset;
    reg [19:0] in_data;
    wire [19:0] out_data;

    // Instantiate the rotation module
    rotation #(2) uut (
        .clk(clk),
        .reset(reset),
        .in(in_data),
        .out(out_data)
    );

    // Clock generation
    always begin
        #5 clk = ~clk;
    end

    // Initial block for simulation setup
    initial begin
        // Initialize inputs
        clk = 0;
        reset = 0;
        in_data = 20'hABCDE;

        // Apply a reset
        reset = 1;
        #10 reset = 0;

        // Apply input values
        in_data = 20'h12345;
        #10 in_data = 20'hABCDE;
        #10 in_data = 20'h98765;

        // Add more test cases as needed

        // Finish simulation after some time
        #100 $finish;
    end

endmodule
