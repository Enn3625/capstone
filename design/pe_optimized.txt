`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 10.03.2024 17:18:18
// Design Name: 
// Module Name: pe_optimized
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module pe_optimized(
            input wire clk,
            input wire reset,
            input wire signed [31:0]sum,
            input wire sa_mode,
            input wire signed [1:0] multiplier,
            input wire signed [31:0] multiplicand,
            output reg signed [31:0]out);
    
    // reg signed [31:0]intermediate;
    // reg signed [31:0]addr1;
    // reg signed [31:0] addr2;
    // reg  muxright=0;
    // reg signed [31:0] muxleft;
    // reg signed [31:0]muxmiddle;
    
    
    always@(posedge clk or posedge reset) 
      begin
        //cycle1
        if(reset)
            out<=0;
        else begin
           if (sa_mode == 0) out <= 0;
           else begin
              case (multiplier) 
                2'b01 : out <= sum+multiplicand;
                2'b11 : out <= sum-multiplicand;
                default : out <= 0;
              endcase
           end
        /*
        addr1 <= sum+multiplier[1];
        muxright <= sa_mode?multiplier[0]:0;
        muxleft <= multiplier[1]?(~multiplicand):multiplicand;
        //cycle2
        muxmiddle <= muxright?muxleft:0;
        addr2 <= addr1;
        // cycle3
        intermediate<=muxmiddle+addr2;
        //cycle4
        out<=intermediate;
        */
        
        end
      end   
endmodule
